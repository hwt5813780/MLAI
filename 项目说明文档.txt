标题： 基于PaddleNLP的Web端多格式纠错系统

项目教程：https://aistudio.baidu.com/aistudio/projectdetail/4145528

一. 项目介绍：
基于PaddleNLP的Web端多格式纠错系统，前后端分离式部署，支持文本、文档及图片的多格式智能纠错！同时支持对修正的错误字进行标记提示和结果的保存。
技术栈：后端：FastAPI + PaddleNLP + PaddleHub；前端：Vue+ ElementUI。

二.  项目目录结构：
a.backend文件夹为后端API服务模块，main.py为后端API服务主程序。
b.frontend文件夹为纠错系统web前端界面模块，核心关注src/router/index.js和src/views/，router中定义了界面路由，views下为搭建的新界面。
c.项目说明文档.txt，主要介绍项目环境配置操作，帮助更好地上手项目！

三. 项目环境配置：

3.1 后端环境配置：
首先需要下载安装Python包管理器Anaconda：https://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/
访问镜像下载网站，根据自己电脑系统（win64或Linux等）选择合适的版本，建议选择较新的版本。

# 配置清华源镜像加速
conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/
conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main/
conda config --set show_channel_urls yes

// 创建新环境，环境名为csc，python版本为3.7
conda create -n csc python=3.7

// 进入刚才创建的虚拟环境csc，注意后续环境配置操作都将在该环境中进行配置！！！
activate csc

// 下载paddle，建议安装GPU版本性能更优。简化配置的话也可以选择下载CPU版本
// paddle官网下载地址（根据型号等进行选择）：
https://www.paddlepaddle.org.cn/install/quick?docurl=/documentation/docs/zh/install/pip/linux-pip.html

// 若安装gpu版本需要先配置cuda和cudnn，参考教程：
https://aistudio.baidu.com/aistudio/projectdetail/696822?channelType=0&channel=0

// 下面给出PaddlePaddle 2.3 CPU版本 Windows下pip的下载命令（具体建议以官网提供的为准）：
python -m pip install paddlepaddle==2.3.0 -i https://mirror.baidu.com/pypi/simple

// paddle测试是否安装成功，在命令行中依次输入：
python
import paddle
paddle.utils.run_check()
// 若提示“PaddlePaddle is installed successfully!”则安装成功！

// 下载文本纠错所需依赖库
pip install --upgrade paddlenlp
pip install pypinyin --upgrade

// 下载word处理依赖库
pip install python-docx

// 安装后端框架FastAPI
pip install fastapi
pip install "uvicorn[standard]"

// 下载其他依赖包，用于form-data file格式
pip install python-multipart

// 下载PaddleHub，结合PaddleOCR技术用于图片内文本的识别
// OCR模型文档：https://www.paddlepaddle.org.cn/hubdetail?name=chinese_ocr_db_crnn_server&en_category=TextRecognition
pip install paddlehub shapely pyclipper
hub install chinese_ocr_db_crnn_mobile==1.1.2

// 接口调试可以下载安装Postman软件便于后端Restful API接口的访问测试
Postman使用参考：https://mp.weixin.qq.com/s/IoseF-2Ma8mH2gdQLn1rUA

// 通过cd命令进行项目backend文件夹，启动后端服务！
python main.py
// 初次启动会进行一次模型预测操作进行预热，时间会稍久些但可有效提高后续接口访问的性能。
// 看到“Application startup complete”和“Uvicorn ruuning on http:127.0.0.1:8000”代表后端项目启动成功

3.2 前端环境配置：

建议下载个前端IDE便于调试，建议使用VS Code，由于添加了eslint审查，建议在VS Code插件市场下载vue和eslint插件。

安装node.js，后续需要使用到npm管理包：
参考：https://m.php.cn/article/483528.html

// 通过cd命令进行项目frontend文件夹，安装项目依赖
npm install

// 启动前端项目
npm run dev
// ps:看到App running at:Local: http://localhost:9528代表项目启动成功
此时访问http://localhost:9528即可进入纠错系统

// 注意要完整访问的话，前端和后端项目都要启动哦！

四.学习资料：
1.FastAPI官方文档：https://fastapi.tiangolo.com/zh/
2.Postman使用教程：https://mp.weixin.qq.com/s/IoseF-2Ma8mH2gdQLn1rUA
3.Vue官方文档：https://v3.cn.vuejs.org/
4.ElementUI文档：https://v3.cn.vuejs.org/
5.vue-admin-template：https://github.com/PanJiaChen/vue-admin-template

五.联系作者：
项目运行过程中遇到问题欢迎在项目评论区（https://aistudio.baidu.com/aistudio/projectdetail/4145528）留言反馈也可以qq联系1075558916，注意提供完整报错信息和截图便于定位和解决问题。




